// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3528.Simba.subsystems;

import org.usfirst.frc3528.Simba.RobotMap;
import org.usfirst.frc3528.Simba.commands.*;

import com.ctre.CANTalon;

import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.interfaces.Accelerometer;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 *
 */
public class DriveTrain extends Subsystem {

    SpeedController frontLeftMotor = RobotMap.driveTrainfrontLeftMotor;
    SpeedController frontRightMotor = RobotMap.driveTrainfrontRightMotor;
    SpeedController rearLeftMotor = RobotMap.driveTrainrearLeftMotor;
    SpeedController rearRightMotor = RobotMap.driveTrainrearRightMotor;
    RobotDrive tankDrive = RobotMap.driveTraintankDrive;
   


    Accelerometer accel = new BuiltInAccelerometer(Accelerometer.Range.k4G);
    double xVal;
    double yVal;
    double zVal;
    boolean disableMovementCheck = false; // DMC
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {

        setDefaultCommand(new DriveWithJoystick());
    
    }
    
    public void drive(double left, double right) {
    	tankDrive.tankDrive(left, right);
    }
    
    public void getAccelValues() {
    	xVal = accel.getX();
        yVal = accel.getY();
        zVal = accel.getZ();
    }
    
    public void printAccelValues() {
    	getAccelValues();
    	System.out.println("X: " + xVal + "   Y: " + yVal + "   Z: " + zVal);
    }
    
    public void printAccelToDashboard() {
    	getAccelValues();
    	SmartDashboard.putNumber("Accel X", xVal);
    	SmartDashboard.putNumber("Accel Y", yVal);
    	SmartDashboard.putNumber("Accel Z", zVal);
    }
    
    public double getAccelXVal() {
    	return xVal;
    }
    
    public double getAccelYVal() {
    	return yVal;
    }
    
    public double getAccelZVal() {
    	return zVal;
    }
    
    public void toggleDMCValue() {
    	disableMovementCheck = !disableMovementCheck;
    }
    
    public boolean checkDMCValue() {
    	return disableMovementCheck;
    }
    
}

